{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/FinalProjects/choice-predicting-app/src/Body/Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Body.css\";\nimport ResultModal from \"./ModalBox/ResultModal\";\nimport SingleBlocks from \"./SingleBlocks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Body = props => {\n  _s();\n\n  const [value, setValue] = useState();\n  const [predictedValue, setPredictedValue] = useState();\n\n  const IntervalCalc = val => {\n    console.log(\"Comic:\", comicSec);\n    console.log(\"Doodle:\", doodleSec);\n    console.log(\"Mandala:\", mandalaSec);\n    console.log(\"Water:\", waterSec);\n    console.log(\"Sketch:\", sketchSec);\n    const predictedTimeSpent = Math.max(comicSec, doodleSec, mandalaSec, waterSec, sketchSec);\n\n    if (predictedTimeSpent === comicSec) {\n      setPredictedValue(\"Comic Style\");\n    } else if (predictedTimeSpent === doodleSec) {\n      setPredictedValue(\"Doodle Style\");\n    } else if (predictedTimeSpent === mandalaSec) {\n      setPredictedValue(\"Mandala Style\");\n    } else if (predictedTimeSpent === waterSec) {\n      setPredictedValue(\"Water Style\");\n    } else if (predictedTimeSpent === sketchSec) {\n      setPredictedValue(\"Sketch Style\");\n    } // switch(predictedTimeSpent){\n    //     case comicSec : {setPredictedValue(\"Comic Style\")}\n    //     break;\n    //     case doodleSec : {setPredictedValue(\"Doodle Style\")}\n    //     break;\n    //     case mandalaSec : {setPredictedValue(\"Mandala art Style\")}\n    //     break;\n    //     case waterSec : {setPredictedValue(\"Water Style\")}\n    //     break;\n    //     case sketchSec : {setPredictedValue(\"Sketch Style\")}\n    //     break;\n    // }\n\n\n    setValue(val);\n    console.log(props.useName);\n    console.log(predictedValue);\n  };\n\n  const endClick = val2 => {\n    setValue(val2);\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backbody_div\",\n      children: LinkList.map(list => /*#__PURE__*/_jsxDEV(SingleBlocks, {\n        link: list.Link\n      }, list.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 35\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button_div\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bottom_button\",\n        onClick: IntervalCalc,\n        children: \"Ok, Predict my choice!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), value && /*#__PURE__*/_jsxDEV(ResultModal, {\n      predictedValue: predictedValue,\n      name_of_user: props.useName,\n      onClick: endClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Body, \"uU0dDrUXtRIyuf5d4PJmr46c6Gg=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useState","ResultModal","SingleBlocks","Body","props","value","setValue","predictedValue","setPredictedValue","IntervalCalc","val","console","log","comicSec","doodleSec","mandalaSec","waterSec","sketchSec","predictedTimeSpent","Math","max","useName","endClick","val2","window","location","reload","LinkList","map","list","Link","key"],"sources":["/home/rohan/Desktop/FinalProjects/choice-predicting-app/src/Body/Body.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./Body.css\"\nimport ResultModal from \"./ModalBox/ResultModal\";\nimport SingleBlocks from \"./SingleBlocks\";\n\n\nconst Body = (props) => {\n\n    \n\nconst [value, setValue] = useState();\nconst [predictedValue, setPredictedValue] = useState();\n\nconst IntervalCalc = (val) => {\n    console.log(\"Comic:\", comicSec);\n    console.log(\"Doodle:\", doodleSec);\n    console.log(\"Mandala:\", mandalaSec);\n    console.log(\"Water:\", waterSec);\n    console.log(\"Sketch:\", sketchSec);\n\n    const predictedTimeSpent=Math.max(comicSec, doodleSec, mandalaSec, waterSec, sketchSec)\n\n    if(predictedTimeSpent === comicSec){\n        setPredictedValue(\"Comic Style\")\n    }\n\n    else if(predictedTimeSpent === doodleSec){\n        setPredictedValue(\"Doodle Style\")\n    }\n\n    else if(predictedTimeSpent === mandalaSec){\n        setPredictedValue(\"Mandala Style\")\n    }\n\n    else if(predictedTimeSpent === waterSec){\n        setPredictedValue(\"Water Style\")\n    }\n\n    else if(predictedTimeSpent === sketchSec){\n        setPredictedValue(\"Sketch Style\")\n    }\n    \n    // switch(predictedTimeSpent){\n    //     case comicSec : {setPredictedValue(\"Comic Style\")}\n    //     break;\n\n    //     case doodleSec : {setPredictedValue(\"Doodle Style\")}\n    //     break;\n        \n    //     case mandalaSec : {setPredictedValue(\"Mandala art Style\")}\n    //     break;\n\n    //     case waterSec : {setPredictedValue(\"Water Style\")}\n    //     break;\n\n    //     case sketchSec : {setPredictedValue(\"Sketch Style\")}\n    //     break;\n    // }\n    setValue(val);\n    console.log(props.useName)\n    console.log(predictedValue)\n}\n\n\nconst endClick = (val2) => {\n    setValue(val2);\n    window.location.reload() \n}\n    \n    return (\n        <div>\n        <div className=\"backbody_div\">\n            {LinkList.map((list)=><SingleBlocks link = {list.Link} key = {list.key}></SingleBlocks>)}\n            </div>\n            <div className=\"button_div\">\n            <button className=\"bottom_button\" onClick={IntervalCalc}>Ok, Predict my choice!</button>\n            </div>\n            {value && <ResultModal predictedValue={predictedValue} name_of_user={props.useName} onClick={endClick}/>}\n        </div>\n    )\n};\n\nexport default Body;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAIxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;EACA,MAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;;EAEA,MAAMS,YAAY,GAAIC,GAAD,IAAS;IAC1BC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,QAAtB;IACAF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;IACAH,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,UAAxB;IACAJ,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,QAAtB;IACAL,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,SAAvB;IAEA,MAAMC,kBAAkB,GAACC,IAAI,CAACC,GAAL,CAASP,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,QAA1C,EAAoDC,SAApD,CAAzB;;IAEA,IAAGC,kBAAkB,KAAKL,QAA1B,EAAmC;MAC/BL,iBAAiB,CAAC,aAAD,CAAjB;IACH,CAFD,MAIK,IAAGU,kBAAkB,KAAKJ,SAA1B,EAAoC;MACrCN,iBAAiB,CAAC,cAAD,CAAjB;IACH,CAFI,MAIA,IAAGU,kBAAkB,KAAKH,UAA1B,EAAqC;MACtCP,iBAAiB,CAAC,eAAD,CAAjB;IACH,CAFI,MAIA,IAAGU,kBAAkB,KAAKF,QAA1B,EAAmC;MACpCR,iBAAiB,CAAC,aAAD,CAAjB;IACH,CAFI,MAIA,IAAGU,kBAAkB,KAAKD,SAA1B,EAAoC;MACrCT,iBAAiB,CAAC,cAAD,CAAjB;IACH,CA3ByB,CA6B1B;IACA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;IACA;;;IACAF,QAAQ,CAACI,GAAD,CAAR;IACAC,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACiB,OAAlB;IACAV,OAAO,CAACC,GAAR,CAAYL,cAAZ;EACH,CAhDD;;EAmDA,MAAMe,QAAQ,GAAIC,IAAD,IAAU;IACvBjB,QAAQ,CAACiB,IAAD,CAAR;IACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB;EACH,CAHD;;EAKI,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,cAAf;MAAA,UACKC,QAAQ,CAACC,GAAT,CAAcC,IAAD,iBAAQ,QAAC,YAAD;QAAc,IAAI,EAAIA,IAAI,CAACC;MAA3B,GAAwCD,IAAI,CAACE,GAA7C;QAAA;QAAA;QAAA;MAAA,QAArB;IADL;MAAA;MAAA;MAAA;IAAA,QADA,eAII;MAAK,SAAS,EAAC,YAAf;MAAA,uBACA;QAAQ,SAAS,EAAC,eAAlB;QAAkC,OAAO,EAAEtB,YAA3C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAJJ,EAOKJ,KAAK,iBAAI,QAAC,WAAD;MAAa,cAAc,EAAEE,cAA7B;MAA6C,YAAY,EAAEH,KAAK,CAACiB,OAAjE;MAA0E,OAAO,EAAEC;IAAnF;MAAA;MAAA;MAAA;IAAA,QAPd;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CA1ED;;GAAMnB,I;;KAAAA,I;AA4EN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}